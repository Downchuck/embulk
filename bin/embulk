#!/usr/bin/env ruby

java_args = []
jruby_args = []
default_optimize = false
overwrite_optimize = nil

until ARGV.empty?
  v = ARGV[0]
  case v
  when "-J+O"
    overwrite_optimize = true
    ARGV.shift
  when "-J-O"
    overwrite_optimize = false
    ARGV.shift
  when "-J"
    prop_path = ARGV[1]
    unless prop_path
      STDERR.puts "-J option requires an option"
      exit 1
    end
    props = File.read(prop_path)
    java_props = props.split("\n").reject {|prop| prop.strip.empty? }
    java_args = java_props + java_args
    ARGV.shift
    ARGV.shift
  when /-J(.*)/
    java_args << v[2..-1]
    ARGV.shift
  when /-R(.*)/
    jruby_args << v[2..-1]
    ARGV.shift
  when "run"
    default_optimize = true
    ARGV.shift
    break
  else
    break
  end
end

# TODO cygwin check
cygwin = false

java_cmd = ENV['JAVACMD']
unless java_cmd
  if java_home = ENV['JAVA_HOME']
    if cygwin
      java_cmd = "#{`cygpath -u "#{java_home}"`.strip}/bin/java"
    else
      java_cmd = "#{java_home}/bin/java"
    end
  else
    java_cmd = "java"
  end
end

embulk_home = File.dirname(File.dirname(__FILE__))
classpath_dir = File.join(embulk_home, 'classpath')
lib_dir = File.join(embulk_home, 'lib')

jruby_complete = Dir.entries(classpath_dir).find {|jar| jar =~ /jruby-complete-[\d\.]+\.jar/ } rescue nil
unless jruby_complete
  STDERR.puts "Could not find jruby-complete at #{embulk_home}/classpath directory."
  if embulk_home == '.'
    STDERR.puts "Did you run ./gradlew classpath? You need to build java code and create ./classpath directory first."
  end
  raise SystemExit.new(1)
end

if overwrite_optimize == true || (default_optimize == true && overwrite_optimize != false)
    java_args = %w[-XX:+AggressiveOpts -XX:+UseConcMarkSweepGC] + java_args
else
    java_args = %w[-XX:+AggressiveOpts -XX:+TieredCompilation -XX:TieredStopAtLevel=1 -Xverify:none] + java_args
end

# java ... -jar ruby-complete.jar $EMBULK_HOME/lib/embulk/command/embulk.rb "$@"
cmdline = [java_cmd]
cmdline.concat java_args
cmdline << '-jar' << File.join(classpath_dir, jruby_complete)
cmdline.concat jruby_args
cmdline << File.join(lib_dir, 'embulk/command/embulk.rb')
cmdline.concat ARGV
exec *cmdline
