module Embulk
  module Input

    class <%= ruby_class_name %> < InputPlugin
      Plugin.register_input(<%= name %>, self)

      def self.transaction(config, &control)
        # configuration code:
        task = {
          "property1" => config.param("property1", :string)
          "property2" => config.param("property2", :integer, default: 0)
        }

        columns = [
          Column.new(0, "example", :string),
          Column.new(1, "column", :integer),
          Column.new(2, "name", :double),
        ]

        resume(task, columns, 1, &control)
      end

      def self.resume(task, columns, count, &control)
        commit_reports = yield(task, columns, count)

        next_config_diff = {}
        return next_config_diff
      end

      def init
        # initialization code:
        @property1 = task["property1"]
        @property2 = task["property2"]
      end

      def run
        @page_builder.add(["example-value", 1, 0.1])
        @page_builder.add(["example-value", 2, 0.2])
        @page_builder.finish

        commit_report = {}
        return commit_report
      end
    end

  end
end
